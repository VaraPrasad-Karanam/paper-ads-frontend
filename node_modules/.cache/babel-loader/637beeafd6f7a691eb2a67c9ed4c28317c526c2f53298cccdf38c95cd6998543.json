{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.NODE_ENV==='production'?'https://your-production-url.com/api':'http://localhost:5000/api';const api=axios.create({baseURL:API_BASE_URL,timeout:30000,headers:{'Content-Type':'application/json'}});// Request interceptor\napi.interceptors.request.use(config=>{console.log(\"Making \".concat(config.method.toUpperCase(),\" request to: \").concat(config.url));return config;},error=>{return Promise.reject(error);});// Response interceptor\napi.interceptors.response.use(response=>{return response;},error=>{var _error$response,_error$response2,_error$response2$data;console.error('API Error:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);if(error.code==='ECONNABORTED'){throw new Error('Request timeout. Please try again.');}if(!error.response){throw new Error('Network error. Please check your connection.');}if((_error$response2=error.response)!==null&&_error$response2!==void 0&&(_error$response2$data=_error$response2.data)!==null&&_error$response2$data!==void 0&&_error$response2$data.message){throw new Error(error.response.data.message);}throw error;});// Categories API\nexport const getCategories=async()=>{const response=await api.get('/categories');return response.data;};export const createCategory=async categoryData=>{const response=await api.post('/categories',categoryData);return response.data;};export const deleteCategory=async categoryId=>{const response=await api.delete(\"/categories/\".concat(categoryId));return response.data;};// Ads API\nexport const getAds=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/ads',{params});return response.data;};export const uploadAd=async(formData,onUploadProgress)=>{const response=await api.post('/ads',formData,{headers:{'Content-Type':'multipart/form-data'},onUploadProgress,timeout:60000});return response.data;};export const uploadMultipleAds=async(formData,onUploadProgress)=>{const response=await api.post('/ads/bulk',formData,{headers:{'Content-Type':'multipart/form-data'},onUploadProgress,timeout:120000});return response.data;};export const deleteAd=async adId=>{const response=await api.delete(\"/ads/\".concat(adId));return response.data;};export const updateAd=async(adId,adData)=>{const response=await api.put(\"/ads/\".concat(adId),adData);return response.data;};export const checkHealth=async()=>{const response=await api.get('/health');return response.data;};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","api","create","baseURL","timeout","headers","interceptors","request","use","config","console","log","concat","method","toUpperCase","url","error","Promise","reject","response","_error$response","_error$response2","_error$response2$data","data","message","code","Error","getCategories","get","createCategory","categoryData","post","deleteCategory","categoryId","delete","getAds","params","arguments","length","undefined","uploadAd","formData","onUploadProgress","uploadMultipleAds","deleteAd","adId","updateAd","adData","put","checkHealth"],"sources":["D:/paper-ads-website/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \r\n  ? 'https://your-production-url.com/api'\r\n  : 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`Making ${config.method.toUpperCase()} request to: ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', error.response?.data || error.message);\r\n    \r\n    if (error.code === 'ECONNABORTED') {\r\n      throw new Error('Request timeout. Please try again.');\r\n    }\r\n    \r\n    if (!error.response) {\r\n      throw new Error('Network error. Please check your connection.');\r\n    }\r\n    \r\n    if (error.response?.data?.message) {\r\n      throw new Error(error.response.data.message);\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n);\r\n\r\n// Categories API\r\nexport const getCategories = async () => {\r\n  const response = await api.get('/categories');\r\n  return response.data;\r\n};\r\n\r\nexport const createCategory = async (categoryData) => {\r\n  const response = await api.post('/categories', categoryData);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteCategory = async (categoryId) => {\r\n  const response = await api.delete(`/categories/${categoryId}`);\r\n  return response.data;\r\n};\r\n\r\n// Ads API\r\nexport const getAds = async (params = {}) => {\r\n  const response = await api.get('/ads', { params });\r\n  return response.data;\r\n};\r\n\r\nexport const uploadAd = async (formData, onUploadProgress) => {\r\n  const response = await api.post('/ads', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n    onUploadProgress,\r\n    timeout: 60000,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const uploadMultipleAds = async (formData, onUploadProgress) => {\r\n  const response = await api.post('/ads/bulk', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n    onUploadProgress,\r\n    timeout: 120000,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const deleteAd = async (adId) => {\r\n  const response = await api.delete(`/ads/${adId}`);\r\n  return response.data;\r\n};\r\n\r\nexport const updateAd = async (adId, adData) => {\r\n  const response = await api.put(`/ads/${adId}`, adData);\r\n  return response.data;\r\n};\r\n\r\nexport const checkHealth = async () => {\r\n  const response = await api.get('/health');\r\n  return response.data;\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}